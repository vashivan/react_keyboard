{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handlePressKey","event","setState","key","document","addEventListener","this","removeEventListener","className","React","PureComponent","ReactDOM","render","getElementById"],"mappings":"oNAEaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAaEC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,kBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,kBAV/C,oBAiBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SACIT,EAEG,mBAAGS,UAAU,eAAb,4CAAyDT,EAAzD,OADA,mBAAGS,UAAU,eAAb,2CAvBb,GAAyBC,IAAMC,e,MCG/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.865a4191.chunk.js","sourcesContent":["import React from 'react';\n\nexport class App extends React.PureComponent {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handlePressKey);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handlePressKey);\n  }\n\n  handlePressKey = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        {!pressedKey\n          ? (<p className=\"App__message\">Nothing was pressed yet</p>)\n          : (<p className=\"App__message\">{`The last pressed key is [${pressedKey}]`}</p>)}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}